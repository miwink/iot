version: "3"

services:
  webserver:
    image: nginx:latest
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/sites:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
    depends_on:
      - iot
      - grafana
      - influxdb
    networks:
      - iot-network

  certbot:
    image: certbot/certbot
    env_file:
      - certbot.env
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  iot:
    image: miwink/iot:latest
    container_name: iot
    restart: unless-stopped
    networks:
      - iot-network
  
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
        - 8086:8086
    environment:
        INFLUXDB_HTTP_AUTH_ENABLED: "true"
        INFLUXDB_DB: "iot"
        INFLUXDB_ADMIN_USER: "iotlnu"
        INFLUXDB_ADMIN_PASSWORD: "micropython"
    networks: 
        - iot-network
    volumes:
        - ./data/influxdb:/var/lib/influxdb 

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: "$UID:$GID"
    ports: 
        - 3000:3000
    environment:
        GF_SECURITY_ADMIN_USER: admin
        GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
        - grafana-storage:/var/lib/grafana
    networks: 
        - iot-network
    restart: always 

networks:
  iot-network:
    driver: bridge

volumes:
  grafana-storage:
#  elastic-network:
#    driver: bridge
#  docker-network:
#    driver: bridge
